import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

column_names = ['user_id', 'item_id', 'rating', 'timestamp']
df = pd.read_csv('Downloads/user_Id.txt', sep='\t', names=column_names)

df.head()

movie_titles = pd.read_csv("Downloads/Movie_Id.txt")
movie_titles.head()

df = pd.merge(df,movie_titles,on='item_id')
df.head()

import seaborn as sns
sns.set_style('white')
%matplotlib inline

##A ratings dataframe with average rating and number of ratings:
df.groupby('title')['rating'].mean().sort_values(ascending=False).head()

df.groupby('title')['rating'].count().sort_values(ascending=False).head()

ratings = pd.DataFrame(df.groupby('title')['rating'].mean())
ratings.head()

##Setting the number of ratings column:
ratings['num of ratings'] = pd.DataFrame(df.groupby('title')['rating'].count())
ratings.head()

##Histogram
plt.figure(figsize=(10,4))
ratings['num of ratings'].hist(bins=70)

sns.jointplot(x='rating',y='num of ratings',data=ratings,alpha=0.5)

##A matrix that has the user ids on one access and the movie title on another axis with ratings.
moviemat = df.pivot_table(index='user_id',columns='title',values='rating')
moviemat.head()

##Most rated movies:
ratings.sort_values('num of ratings',ascending=False).head(10)

##Choosing particular movies:
ratings.head()

##Ratings for particular movies:
movie_user_ratings = moviemat['Movie (YYYY)']
movietwo_user_ratings = moviemat['Movie Two (YYYY)']
movie_user_ratings.head()

##Correlations between two panda series
similar_to_movie = moviemat.corrwith(movie_user_ratings)
similar_to_movietwo = moviemat.corrwith(movietwo_user_ratings)

##Correlations between two panda series
similar_to_movie = moviemat.corrwith(movie_user_ratings)
similar_to_movietwo = moviemat.corrwith(movietwo_user_ratings)

##Most similar movies:
corr_movie.sort_values('Correlation',ascending=False).head(10)

